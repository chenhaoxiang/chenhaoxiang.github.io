<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Other | 谙忆-人生之旅]]></title>
  <link href="http://chenhaoxiang.github.io/blog/categories/other/atom.xml" rel="self"/>
  <link href="http://chenhaoxiang.github.io/"/>
  <updated>2017-09-06T22:43:17+08:00</updated>
  <id>http://chenhaoxiang.github.io/</id>
  <author>
    <name><![CDATA[陈浩翔]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[课程设计，文件加密]]></title>
    <link href="http://chenhaoxiang.github.io/blog/2015/08/21/Curriculum-design-file-encryption/"/>
    <updated>2015-08-21T06:13:55+08:00</updated>
    <id>http://chenhaoxiang.github.io/blog/2015/08/21/Curriculum-design-file-encryption</id>
    <content type="html"><![CDATA[<p>题目：文件加密
  文件的传输会有明文和密文的区别，明文发送时不安全的，用一个程序实现发送文件的加密和解密操作。
  加密算法，密钥设计由同学自己选择现有的加密解密算法或是自己设计的。</p>

<!-- more -->


<hr />

<p>小提示，密码文件需要自己先创建一个txt文件自己输入6个字符密码，路径与代码的运行路径在一起。。。
```
/<em>题目：文件加密
  文件的传输会有明文和密文的区别，明文发送时不安全的，用一个程序实现发送文件的加密和解密操作。
  加密算法，密钥设计由同学自己选择现有的加密解密算法或是自己设计的。
  要求：
    （1）对文件的字符根据加密算法，实现文件加密。
    （2）对操作给出必要的提示。
    （3）对存在的file1.txt文件，必须先打开，后读写，最后关闭。加密后的文件放在file2.txt。
    （4）解密文件保存在file3.txt中。
</em>/</p>

<h1>include &lt;stdio.h>  // 标准输入输出函数</h1>

<h1>include &lt;stdlib.h>  // 标准库函数</h1>

<h1>include &lt;string.h>  // 字符串处理函数</h1>

<h1>include  &lt;conio.h>   //控制台输入输出函数</h1>

<p>char password[6];//软件初始密码
int jiami();
int check(int type);
int jiemi();
int xianshi();
int zhucaidan();
int fuzhi();
int fanhui();
int gaimima();
int jieshu();
char infile[20];
char outfile[21];</p>

<p>int main()
{
    system(&ldquo;cls&rdquo;);
    // 操作前先校验密码
    if(!check(1))
    {
        printf(&ldquo;抱歉，3次输入密码错误。按任意键退出程序&hellip;&rdquo;);
        getchar();
        exit(0);
    }
    // 密码校验成功，显示程序菜单，执行各种操作
     zhucaidan();
     return 0;
}</p>

<p>int jiami()
{
    FILE <em>in;
    FILE </em>out;
    int i=0;
    char ch;
    char yuanzifu[100000];
    char gaiguodezifu[100000];
    system(&ldquo;cls&rdquo;); // 清屏
    printf(&ldquo;╔════════════════════════════════════╗\n&rdquo;);
    printf(&ldquo;║                                    ║\n&rdquo;);
    printf(&ldquo;║    欢迎使用本软件进行文件加密      ║\n&rdquo;);
    printf(&ldquo;║                                    ║\n&rdquo;);
    printf(&ldquo;║          祝您体验愉快              ║\n&rdquo;);
    printf(&ldquo;║                                    ║\n&rdquo;);
    printf(&ldquo;╚════════════════════════════════════╝\n&rdquo;);
    printf(&ldquo;请输入需要加密的文件名(含路径)：&rdquo;);
    scanf(&ldquo;%s&rdquo;,infile);
    in=fopen(infile,&ldquo;rb&rdquo;);//只读文件
    if(in==NULL)
    {
        printf(&ldquo;\n文件[%s]打开失败，请检查文件路径和名称是否输入正确！\n&rdquo;,infile);
        printf(&ldquo;\n按下任意键返回重新输入加密文件&hellip;.&rdquo;);
        system(&ldquo;pause&rdquo;);//输入任意字符后进行下一步，也就是让输出停留
        return jiami();
    }
    printf(&ldquo;\n请输入加密后的文件名(含路径)：&rdquo;);
    scanf(&ldquo;%s&rdquo;,outfile);
    out=fopen(outfile,&ldquo;wb&rdquo;);//只写文件
    if(out==NULL)
    {
        printf(&ldquo;文件[%s]创建/写入失败，请检查文件路径和名称是否输入正确！\n&rdquo;,outfile);
        printf(&ldquo;\n按下任意键返回重新输入加密文件&hellip;.&rdquo;);
        system(&ldquo;pause&rdquo;);//输入任意字符后进行下一步，也就是让输出停留
        return jiami();
    }
     ch=fgetc(in);//读入一个字符
     while(ch!=EOF)//读入字符直到字符结束
    {
      yuanzifu[i]=ch;//将ch赋给字符串数组
      i++;
      ch=fgetc(in);//读入一个字符
    }
    int n;
    n=i;
    putchar(10);//空行
    printf(&ldquo;原文件内容如下：\n&rdquo;);
    printf(&ldquo;%s\n&rdquo;,yuanzifu);
    //printf(&ldquo;n=%d&rdquo;,n);
    for(i=0;i&lt;n;i++)
    {
        int s=1;
        int m=3000;
        gaiguodezifu[i]=yuanzifu[i]+s*s-m;//进行字符加密处理
        s++;
        m&ndash;;
        if(s>5000)
        {
            s=1;
        }
    }
    //printf(&ldquo;%s&rdquo;,gaiguodezifu);
    for(i=0;i&lt;n;i++)
    {
        ch=gaiguodezifu[i];
        fputc(ch,out);
       // putchar(ch);
    }
    putchar(10);
    printf(&ldquo;加密后的文件内容如下：\n&rdquo;);
    printf(&ldquo;%s&rdquo;,gaiguodezifu);
    putchar(10);
    printf(&ldquo;\n按下任意字符后继续:&rdquo;);
    system(&ldquo;pause&rdquo;);//输入任意字符后进行下一步，也就是让输出停留
    fclose(in);
    fclose(out);
    system(&ldquo;cls&rdquo;); // 清屏
    printf(&ldquo;\n\n恭喜你，文件[%s]加密成功，保存在[%s]。\n&rdquo;, infile, outfile);
    printf(&ldquo;\n\n输入任意字符进行选择下一操作&rdquo;);
    system(&ldquo;pause&rdquo;);
    return fanhui();
}</p>

<p>int jiemi()
{
    system(&ldquo;cls&rdquo;);// 清屏
    FILE <em>in;
    FILE </em>out;
    int i=0;
    char ch;
    char yuanzifu[100000];
    char gaiguodezifu[100000];
    printf(&ldquo;╔════════════════════════════════════╗\n&rdquo;);
    printf(&ldquo;║                                    ║\n&rdquo;);
    printf(&ldquo;║    欢迎使用本软件进行文件解密      ║\n&rdquo;);
    printf(&ldquo;║                                    ║\n&rdquo;);
    printf(&ldquo;║          祝您体验愉快              ║\n&rdquo;);
    printf(&ldquo;║                                    ║\n&rdquo;);
    printf(&ldquo;╚════════════════════════════════════╝\n&rdquo;);
    printf(&ldquo;请输入需要解密的文件名(含路径)：&rdquo;);
    scanf(&ldquo;%s&rdquo;,infile);
    in=fopen(infile,&ldquo;rb&rdquo;);//只读文件
    if(in==NULL)
    {
        printf(&ldquo;\n文件[%s]打开失败，请检查文件路径和名称是否输入正确！\n&rdquo;,infile);
        printf(&ldquo;\n按下任意键返回重新输入解密文件&hellip;.&rdquo;);
        system(&ldquo;pause&rdquo;);//输入任意字符后进行下一步，也就是让输出停留
        return jiemi();
    }
    printf(&ldquo;\n请输入解密后的文件名(含路径)：&rdquo;);
    scanf(&ldquo;%s&rdquo;,outfile);
    out=fopen(outfile,&ldquo;wb&rdquo;);//只写文件
    if(out==NULL)
    {
        printf(&ldquo;文件[%s]创建/写入失败，请检查文件路径和名称是否输入正确！\n&rdquo;,outfile);
        printf(&ldquo;\n按下任意键返回重新输入解密文件&hellip;.&rdquo;);
        system(&ldquo;pause&rdquo;);//输入任意字符后进行下一步，也就是让输出停留
        return jiemi();
    }
     ch=fgetc(in);//读入一个字符
     while(ch!=EOF)//读入字符直到字符结束
    {
      yuanzifu[i]=ch;//将ch赋给字符串数组
      i++;
      ch=fgetc(in);//读入一个字符
    }
    int n;
    n=i;
    putchar(10);//空行
    printf(&ldquo;加密文件内容如下：\n&rdquo;);
    printf(&ldquo;%s\n&rdquo;,yuanzifu);
    //printf(&ldquo;n=%d&rdquo;,n);
    for(i=0;i&lt;n;i++)
    {
        int s=1;
        int m=3000;
        gaiguodezifu[i]=yuanzifu[i]-s*s+m;//进行字符解密处理
        s++;
        m&ndash;;
        if(s>5000)
        {
            s=1;
        }
    }
    //printf(&ldquo;%s&rdquo;,gaiguodezifu);
    for(i=0;i&lt;n;i++)
    {
        ch=gaiguodezifu[i];
        fputc(ch,out);
       // putchar(ch);
    }
    putchar(10);
    printf(&ldquo;解密后的文件内容如下：\n&rdquo;);
    printf(&ldquo;%s&rdquo;,gaiguodezifu);
    putchar(10);
    printf(&ldquo;\n按下任意字符后继续&hellip;&rdquo;);
    system(&ldquo;pause&rdquo;);//输入任意字符后进行下一步，也就是让输出停留
    fclose(in);
    fclose(out);
    system(&ldquo;cls&rdquo;); // 清屏
    printf(&ldquo;\n\n恭喜你，文件[%s]解密成功，保存在[%s]。\n&rdquo;, infile, outfile);
    printf(&ldquo;\n\n输入任意字符进行选择下一操作&hellip;&rdquo;);
    system(&ldquo;pause&rdquo;);
    return fanhui();
}</p>

<p>int xianshi()
{
    FILE <em>in;
    char ch2;
    system(&ldquo;cls&rdquo;);
    printf(&ldquo;</em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><strong>\n&rdquo;);
    printf(&ldquo;</strong>   欢迎使用本软件进行文件显示   <strong>\n&rdquo;);
    printf(&ldquo;</strong>         祝您体验愉快           <strong>\n&rdquo;);
    printf(&ldquo;</strong></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em>*\n&rdquo;);
    printf(&ldquo;\n\n请输入需要显示的文件（包含路径）：&rdquo;);
    scanf(&ldquo;%s&rdquo;,infile);
    in=fopen(infile,&ldquo;rb&rdquo;);
    if(in==NULL)
    {
        printf(&ldquo;\n打开文件错误，请检查文件名（路径），按任意键重新输入&hellip;&rdquo;);
        system(&ldquo;pause&rdquo;);
        return xianshi();
    }
    while(ch2!=EOF)
    {
        ch2=fgetc(in);
        putchar(ch2);
    }
    printf(&ldquo;\n\n按下任意键进入下一选项&hellip;&rdquo;);
    system(&ldquo;pause&rdquo;);
    return fanhui();
}</p>

<p>int check(int a)
{
    int i;
    char ch3[6];
    FILE <em>in;
    in=fopen(&ldquo;mima.txt&rdquo;,&ldquo;r+&rdquo;);
    if(in==NULL)
    {
        printf(&ldquo;\n\n密码文件错误，请检查&hellip;\n&rdquo;);
        exit(0);
    }
    for(i=0;i&lt;6;i++)
    {
        ch3[i]=fgetc(in);
    }
    for(i=0;i&lt;6;i++)
    password[i]=ch3[i];
   // printf(&ldquo;%s&rdquo;,password);
    char pwd[6];  //用户输入的密码
    int trytimes;  // 用户尝试输入密码的次数
    printf(&ldquo;作者：陈浩翔 \n&rdquo;);
    printf(&ldquo;\n程序设置了密码，验证通过后才能使用。请输入6位数字密码：&rdquo;);
    for(trytimes=1; trytimes&lt;=3; trytimes++)
    {
        scanf(&ldquo;%s&rdquo;,pwd);
        fflush(stdin);/</em>清空输入缓冲区。
                        比如scanf(&ldquo;%d&rdquo;,&amp;a);
                            scanf(&ldquo;%c&rdquo;,&amp;c);
                   经常如果这种情况的话，
                   第一次输入的回车可能会被第二次输入操作所捕捉，
                   这个的作用就是清空缓冲，这样就不会出现这种情况了。<em>/
        if(pwd[0]==password[0]&amp;&amp;pwd[1]==password[1]&amp;&amp;pwd[2]==password[2]&amp;&amp;pwd[3]==password[3]&amp;&amp;pwd[4]==password[4]&amp;&amp;pwd[5]==password[5])
        {
            return 1;
            break;
        }
        else
        if(trytimes==3)
        {
            return 0;
        }
        else
        {
            printf(&ldquo;抱歉，密码错误，您还有%d次机会：&rdquo;, 3-trytimes);
        }
    }
    return 0;
}
int zhucaidan()
{
    system(&ldquo;cls&rdquo;);//清屏
    printf(&ldquo;</em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><strong>\n&rdquo;);
    printf(&ldquo;</strong>             欢迎来到文件加密解密界面           <strong>\n&rdquo;);
    printf(&ldquo;</strong>                信息科学与工程学院              <strong>\n&rdquo;);
    printf(&ldquo;</strong>                     软件作者：                 <strong>\n&rdquo;);
    printf(&ldquo;</strong>                1406102-15  陈浩翔              <strong>\n&rdquo;);
    printf(&ldquo;</strong>                                                <strong>\n&rdquo;);
    printf(&ldquo;</strong>               请选择即将进行的操作             <strong>\n&rdquo;);
    printf(&ldquo;</strong>               输入1：加密文件                  <strong>\n&rdquo;);
    printf(&ldquo;</strong>               输入2：解密文件                  <strong>\n&rdquo;);
    printf(&ldquo;</strong>               输入3：显示文件内容              <strong>\n&rdquo;);
    printf(&ldquo;</strong>               输入4：将原文件内容复制到另一文件<strong>\n&rdquo;);
    printf(&ldquo;</strong>               输入5：修改程序密码              <strong>\n&rdquo;);
    printf(&ldquo;</strong>               输入6：退出软件                  <strong>\n&rdquo;);
    printf(&ldquo;</strong></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em>*\n&rdquo;);
    int b;
    scanf(&ldquo;%d&rdquo;,&amp;b);
    switch(b)
    {
        case 1:jiami();break;
        case 2:jiemi();break;
        case 3:xianshi();break;
        case 4:fuzhi();break;
        case 5:gaimima();break;
        case 6:jieshu();break;
        default:
                {
                    printf(&ldquo;没有相应的菜单！按任意键返回&hellip;&rdquo;);
                    system(&ldquo;pause&rdquo;);
                    return zhucaidan();
                }
        return 0;
    }
}//bug1:在主菜单输入多个字母会自动跳到加密文件菜单；</p>

<p>int fuzhi()
{
    system(&ldquo;cls&rdquo;);//清屏
    printf(&ldquo;╔════════════════════════════════════╗\n&rdquo;);
    printf(&ldquo;║                                    ║\n&rdquo;);
    printf(&ldquo;║    欢迎使用本软件进行文件复制      ║\n&rdquo;);
    printf(&ldquo;║                                    ║\n&rdquo;);
    printf(&ldquo;║          祝您体验愉快              ║\n&rdquo;);
    printf(&ldquo;║                                    ║\n&rdquo;);
    printf(&ldquo;╚════════════════════════════════════╝\n&rdquo;);
    FILE <em>in1,</em>out1;
    char ch1;
    printf(&ldquo;请输入需要加密的文件名(含路径)：&rdquo;);
    scanf(&ldquo;%s&rdquo;,infile);
    in1=fopen(infile,&ldquo;rb&rdquo;);//只读文件
    if(in1==NULL)
    {
        printf(&ldquo;\n文件[%s]打开失败，请检查文件路径和名称是否输入正确！\n&rdquo;,infile);
        printf(&ldquo;\n按下任意键返回重新输入加密文件&hellip;.&rdquo;);
        system(&ldquo;pause&rdquo;);//输入任意字符后进行下一步，也就是让输出停留
        return fuzhi();
    }
    printf(&ldquo;\n请输入加密后的文件名(含路径)：&rdquo;);
    scanf(&ldquo;%s&rdquo;,outfile);
    out1=fopen(outfile,&ldquo;wb&rdquo;);//只写文件
    if(out1==NULL)
    {
        printf(&ldquo;文件[%s]创建/写入失败，请检查文件路径和名称是否输入正确！\n&rdquo;,outfile);
        printf(&ldquo;\n按下任意键返回重新输入加密文件&hellip;.&rdquo;);
        system(&ldquo;pause&rdquo;);//输入任意字符后进行下一步，也就是让输出停留
        return fuzhi();
    }
    while(!feof(in1))//如果没有遇到输入文件的结束标志
        //feof(in)是检查in指向的文件是否结束
    {
        ch1=fgetc(in1);//从输入文件读入一个字符，暂时放在变量ch中
        fputc(ch1,out1);//将ch写到out指向的文件中
        putchar(ch1);
    }
    putchar(10);
    fclose(in1);
    fclose(out1);
    return fanhui();
}</p>

<p>int fanhui()
{
      system(&ldquo;cls&rdquo;);//清屏
      int m;
      system(&ldquo;cls&rdquo;);
      printf(&ldquo;############################################\n&rdquo;);
      printf(&ldquo;##           操作成功，请进行选择         ##\n&rdquo;);
      printf(&ldquo;##           1：进入加密菜单              ##\n&rdquo;);
      printf(&ldquo;##           2：进入解密菜单              ##\n&rdquo;);
      printf(&ldquo;##           3：进入显示文件内容菜单      ##\n&rdquo;);
      printf(&ldquo;##           4：进入文件复制菜单          ##\n&rdquo;);
      printf(&ldquo;##           5：返回主菜单                ##\n&rdquo;);
      printf(&ldquo;##           6：退出程序                  ##\n&rdquo;);
      printf(&ldquo;############################################\n&rdquo;);
      scanf(&ldquo;%d&rdquo;,&amp;m);
      switch(m)
      {
          case 1:jiami();break;
          case 2:jiemi();break;
          case 3:xianshi();break;
          case 4:fuzhi();break;
          case 5:main();break;
          case 6:jieshu();break;
          default:
         {
          printf(&ldquo;没有对应选项，按任意键返回&rdquo;);
          system(&ldquo;pause&rdquo;);//输入任意字符后进行下一步，也就是让输出停留
          return fanhui();
         }
      }
}</p>

<p>int gaimima()
{
    system(&ldquo;cls&rdquo;);
    int i;
    char ch[6];
    char cha[6];
    FILE *in;
    in=fopen(&ldquo;mima.txt&rdquo;,&ldquo;w+&rdquo;);
    if(in==NULL)
    {
        printf(&ldquo;\n\n打开（建立）文件出错&hellip;\n&rdquo;);
        exit(0);
    }
    getchar();
    printf(&ldquo;\n请输入6个新密码字符或数字：&rdquo;);
    for(i=0;i&lt;6;i++)
    {
        scanf(&ldquo;%c&rdquo;,&amp;ch[i]);
    }
    getchar();
    printf(&ldquo;\n\n请再输入一次6个新密码字符或数字：&rdquo;);
    for(i=0;i&lt;6;i++)
    {
        scanf(&ldquo;%c&rdquo;,&amp;cha[i]);
    }</p>

<pre><code>for(i=0;i&lt;6;i++)
{
    if(ch[i]!=cha[i])
    {
        printf("2次输入的密码不同，请重新输入：");
        system("pause");
        return gaimima();
    }
    continue;
}
for(i=0;i&lt;6;i++)
{
    password[i]=ch[i];
}
for(i=0;i&lt;6;i++)
{
    fputc(password[i],in);
}
fclose(in);
printf("按下任意键返回主菜单...");
system("pause");
return main();
</code></pre>

<p>}</p>

<p>int jieshu()
{
    system(&ldquo;cls&rdquo;);
    printf(&ldquo;<em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><strong>\n&rdquo;);
    printf(&ldquo;</strong> 欢迎下次再使用本软件  <strong>\n&rdquo;);
    printf(&ldquo;</strong>    ( ^_^ )/~~拜拜     <strong>\n&rdquo;);
    printf(&ldquo;</strong></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em>\n&rdquo;);
    return ;
}</p>

<p>```
我上传部分运行图片：
<img src="http://img.blog.csdn.net/20150821181037970" alt="密码错误时" /></p>

<p><img src="http://img.blog.csdn.net/20150821181130293" alt="正确的密码" /></p>

<p><img src="http://img.blog.csdn.net/20150821181154033" alt="主界面" /></p>

<p><img src="http://img.blog.csdn.net/20150821181222344" alt="显示文件内容" /></p>

<p><img src="http://img.blog.csdn.net/20150821181253954" alt="结束" /></p>

<p>大一下期课程设计。</p>

<p>本文章由<a href="http://chenhaoxiang.cn/">[谙忆]</a>编写， 所有权利保留。
欢迎转载，分享是进步的源泉。</p>

<blockquote cite='陈浩翔'>
<p background-color='#D3D3D3'>转载请注明出处：<a href='http://chenhaoxiang.cn'><font color="green">http://chenhaoxiang.cn</font></a><br><br>
本文源自<strong>【<a href='http://chenhaoxiang.cn' target='_blank'>人生之旅_谙忆的博客</a>】</strong></p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一首诗的代码]]></title>
    <link href="http://chenhaoxiang.github.io/blog/2015/08/21/The-code-of-a-poem/"/>
    <updated>2015-08-21T06:00:58+08:00</updated>
    <id>http://chenhaoxiang.github.io/blog/2015/08/21/The-code-of-a-poem</id>
    <content type="html"><![CDATA[<p>将一首诗用代码输出</p>

<hr />

<pre><code class="C">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;windows.h&gt;
int one1=1,one2=1,one3=1,one4=1,one5=1,one6=1;
void color1()
{
    system("color F4");
    Sleep(500);
}
void color2()
{
    system("color FC");
    Sleep(500);
}
void ai_1(int a,int b,int i)
{
    int j,n,m;
    j=i;
    n=-a-j;
    m=-b-j;
    one1++;
    if(one1%3==0)
        one1=1;
    printf("%c%c",n,m);
    color1();
}
void ai_2(int a,int b,int i)
{
    int j,n,m;
    j=i;
    n=-a+j;
    m=-b+j;
    one2++;
    if(one2%5==0)
        one2=1;
    printf("%c%c",n,m);
    color2();
}
void ai_3(int a,int b,int i)
{
    int j,n,m;
    j=i;
    n=-a-j-1;
    m=-b-j-1;
    one3++;
    if(one3%7==0)
        one3=1;
    printf("%c%c",n,m);
    color1();
}
void ai_4(int a,int b,int i)
{
    int j,n,m;
    j=i;
    n=-a+j+2;
    m=-b+j+2;
    one4++;
    if(one4%9==0)
        one4=1;
    printf("%c%c",n,m);
    color2();
}
void ai_5(int a,int b,int i)
{
    int j,n,m;
    j=i;
    n=-a-j-j;
    m=-b-j-j;
    one5++;
    if(one5%11==0)
        one5=1;
    printf("%c%c",n,m);
    color1();
}
void ai_6(int a,int b,int i)
{
    int j,n,m;
    j=i*i;
    n=-a+j;
    m=-b+j;
    one6++;
    if(one6%13==0)
        one6=1;
    printf("%c%c",n,m);
    color2();
}
void ai(int a,int b,int i)
{
    int j,n,m;
    j=i;
    n=-a+j;
    m=-b+j;
    printf("%c%c",n,m);
    color2();
}
void chx_1()
{
    printf(" ");
    ai_1('D','F',one1);
    ai_2('E',':',one2);
    ai_3('I',';',one3);
    ai_4('N',')',one4);
    ai_4('2','I',one4);
    ai_5('J','0',one5);
    ai_6('E',6,one6);
    ai_3('9',26,one2);
    ai_5('G','8',one2);
    ai_2('&lt;',26,one3);
    ai_5('&lt;','J',one4);
    ai_6('6','@',2*one5);
}
void chx_2()
{
    ai_1('4','1',2*one5);
    ai_4('&lt;','?',one5);
    ai_3(')','+'-8,2*one1);
    ai_5('5','=',one4);
    ai_2('0','3',one6);
    ai_6('Y',')',one3);
    ai_3('*','R',one4);
    ai_4('R','C',one5);
    ai_4('R','-',one5);
    ai_1('*','A',one2);
    ai_5('4',-10,5*one1);
    ai_2('7'+25,'B'+24,3*one1);
    ai_3('?','=',one6);
    ai_6(26,36,one4);
}
void chx_3()
{
    ai_4('9','5',one6);
    ai_2('-',28,one1);
    ai_1('+','W',one3);
    ai_2('9',11,one5);
    ai_5('0',24,one5);
    ai_3('4','1',one4);
    ai_4('8',16,one5);
    ai_6('K','W',one2);
    ai_5('2','&gt;',one4);
    ai_2('Q','B',one6);
    ai_3('*',-4,one4);
    ai_5(39,'9',one1);
    ai(110,79,50);
    ai_1(-11,-1,one1*one1);
}
void chx_4()
{
    ai_4('.','I',one3);
    ai_6('F','I',one2);
    ai_2('T',100,one5);
    ai_3('H','X',one3);
    ai_5('/','G',one1);
    ai_1('.',0,one6-2);
    ai_3('(',':',0);
    ai_5('L','-',one3);
    ai_6(39,'1',one6);
}
void chx_5()
{
    ai_5('.',15,one6-1);
    ai_4('O','@',one5);
    ai_4('H','-',one3);
    ai_6('3','P',one4);
    ai_4('F','7',one5);
    ai_2('@',19,one1);
    ai_1('1','-',one1);
    ai_3('+','7',one4);
    ai_4('9','D',one6);
    ai_1(-19,-9,one6);
}
void chx_6()
{
    ai_1('6',33,one2);
    ai_5(37,33,one3);
    ai_5('*','J',one2);
    ai_2('A','F',one6);
    ai_6('6','2',one1);
    ai_3('*','6',one4);
    ai_6('S','Z',one2);
    ai_3(-22,-12,one6);
}
void chx_7()
{
    ai_3(30,'F',one6);
    ai_1('B',9,one5);
    ai_4(3,13,one6);
    ai_3('.','*',one2);
    ai_2('Z','(',one6);
    ai_5(37,'(',one5);
    ai_6('9','K',one2);
    ai_1('(','?',one4);
    ai_2('K',13,one3);
    ai_3('6','+',one4);
    ai_4('7',27,one3);
    ai_6(15,25,one5);
}
void chx_8()
{
    ai_5(36,';',one5);
    ai_6('N',115,one5);
    ai_4('E',':',one5);
    ai_3('(',12,one4);
    ai_5(37,'7',one1);
    ai_2('.','1',one2);
    ai_1(50,18,one1);
    ai_1(-11,-1,one1);
}
void chx_9()
{
    ai_1('0',44,one1);
    ai_2('?',';',one2);
    ai_3('3',27,one4);
    ai_4('L',33,one3);
    ai_5('B','R',one3);
    ai_6('E',26,one4);
    ai_4(0,10,one5);
}
void chx_10()
{
    ai_4('I',35,one4);
    ai_3('/',35,one3);
    ai_5('3','W',one2);
    ai_4(44,'&gt;',one3);
    ai_1('5',')',one3);
    ai_5(-18,-8,one4);

}
void chx_11()
{
    ai_2('2','I',one4);
    ai_6('3','X',one6);
    ai_3(36,28,one4);
    ai_4('5','B',one1);
    ai_5(36,'G',one5);
    ai_1(-14,-4,one2);

}
void chx_12()
{
    ai_1('1',33,one1);
    ai_5(':',33,one3);
    ai_4(':','=',one5);
    ai_3('A','-',one2);
    ai_6('?','X',one3);
    ai_6(26,36,one4);
    ai_2('6',38,one2);
    ai_3(':',33,one3);
    ai_4(':','=',one5);
    ai_5('B','.',one5);
    ai_1('D',33,one4);
    ai_1(-17,-7,one4);
}
void chx_13()
{
    ai_6('3','N',one5);
    ai_2('5',']',one4);
    ai_6('1','4',one2);
    ai_3('4',21,one4);
    ai_4('0',':',one4*one6);
    ai_5(38,'2',one3);
    ai_4('Y',39,one4);
    ai_1('7',31,one3);
    ai_2('X','V',one6);
    ai_4('?',5,one4);
    ai_6('6','@',one6);

}
void chx_14()
{
    ai_3(36,'?',one3);
    ai_5(34,'J',one3);
    ai_1(36,39,one6);
    ai_4('G','(',one6);
    ai_4(1,11,one6);
    ai_2('J','R',one3);
    ai_3('/','@',one3);
    ai_6('F','I',one4);
    ai_5('G','O',one4);
    ai_1('H',24,one3);
    ai_3(34,11,one6);
    ai_4(-2,8,one5);
}
void chx_15()
{
    ai_3('(','H',one4);
    ai_4('9','L',one6);
    ai_5(24,'6',one6);
    ai_3('B','&lt;',one5);
    ai_6('Z',']',one4);
    ai_2(577,545,520);
    ai_5('(',8,one4);
    ai_6('6','@',one5);
    ai('F',':',0);
    ai('0',23,-1);
    ai_3(-17,-7,one4);
    ai_3(-18,-8,one4);
}
int main()
{
    int i;
    chx_1();
    chx_2();
    chx_3();
    chx_4();
    chx_5();
    chx_6();
    chx_7();
    chx_8();
    chx_9();
    chx_10();
    chx_11();
    chx_12();
    chx_13();
    chx_14();
    chx_15();
    system("pause");
    system("cls");
    float y,x,z,f;
    for (y = 1.5f; y &gt; -1.5f; y -= 0.1f)
    {
        for (x = -1.5f; x &lt; 1.5f; x += 0.05f)
        {
            z = x * x + y * y - 1;
            f = z * z * z - x * x * y * y * y;
            putchar(f &lt;= 0.0f ? ".:-=+*#%@"[(int)(f * -8.0f)] : ' ');
        }
        system("color 0C");
        putchar('\n');
    }
    printf("\n按下任意键结束...\n");
    system("pause");
    return 0;
}
</code></pre>

<p>回忆而写！</p>

<p>本文章由<a href="http://chenhaoxiang.cn/">[谙忆]</a>编写， 所有权利保留。
欢迎转载，分享是进步的源泉。</p>

<blockquote cite='陈浩翔'>
<p background-color='#D3D3D3'>转载请注明出处：<a href='http://chenhaoxiang.cn'><font color="green">http://chenhaoxiang.cn</font></a><br><br>
本文源自<strong>【<a href='http://chenhaoxiang.cn' target='_blank'>人生之旅_谙忆的博客</a>】</strong></p>
</blockquote>

]]></content>
  </entry>
  
</feed>
